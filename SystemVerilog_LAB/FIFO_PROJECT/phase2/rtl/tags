!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!SystemVerilog	A,assert	/assertions (assert, assume, cover, restrict)/
!_TAG_KIND_DESCRIPTION!SystemVerilog	C,class	/classes/
!_TAG_KIND_DESCRIPTION!SystemVerilog	E,enum	/enumerators/
!_TAG_KIND_DESCRIPTION!SystemVerilog	H,checker	/checkers/
!_TAG_KIND_DESCRIPTION!SystemVerilog	I,interface	/interfaces/
!_TAG_KIND_DESCRIPTION!SystemVerilog	K,package	/packages/
!_TAG_KIND_DESCRIPTION!SystemVerilog	L,clocking	/clocking/
!_TAG_KIND_DESCRIPTION!SystemVerilog	M,modport	/modports/
!_TAG_KIND_DESCRIPTION!SystemVerilog	N,nettype	/nettype declarations/
!_TAG_KIND_DESCRIPTION!SystemVerilog	O,constraint	/constraints/
!_TAG_KIND_DESCRIPTION!SystemVerilog	P,program	/programs/
!_TAG_KIND_DESCRIPTION!SystemVerilog	R,property	/properties/
!_TAG_KIND_DESCRIPTION!SystemVerilog	S,struct	/structs and unions/
!_TAG_KIND_DESCRIPTION!SystemVerilog	T,typedef	/type declarations/
!_TAG_KIND_DESCRIPTION!SystemVerilog	V,covergroup	/covergroups/
!_TAG_KIND_DESCRIPTION!SystemVerilog	b,block	/blocks (begin, fork)/
!_TAG_KIND_DESCRIPTION!SystemVerilog	c,constant	/constants (parameter, specparam, enum values)/
!_TAG_KIND_DESCRIPTION!SystemVerilog	d,define	/text macros/
!_TAG_KIND_DESCRIPTION!SystemVerilog	e,event	/events/
!_TAG_KIND_DESCRIPTION!SystemVerilog	f,function	/functions/
!_TAG_KIND_DESCRIPTION!SystemVerilog	i,instance	/instances of module or interface/
!_TAG_KIND_DESCRIPTION!SystemVerilog	l,ifclass	/interface class/
!_TAG_KIND_DESCRIPTION!SystemVerilog	m,module	/modules/
!_TAG_KIND_DESCRIPTION!SystemVerilog	n,net	/net data types/
!_TAG_KIND_DESCRIPTION!SystemVerilog	p,port	/ports/
!_TAG_KIND_DESCRIPTION!SystemVerilog	q,sequence	/sequences/
!_TAG_KIND_DESCRIPTION!SystemVerilog	r,register	/variable data types/
!_TAG_KIND_DESCRIPTION!SystemVerilog	t,task	/tasks/
!_TAG_KIND_DESCRIPTION!SystemVerilog	w,member	/struct and union members/
!_TAG_KIND_DESCRIPTION!Verilog	b,block	/blocks (begin, fork)/
!_TAG_KIND_DESCRIPTION!Verilog	c,constant	/constants (parameter, specparam)/
!_TAG_KIND_DESCRIPTION!Verilog	d,define	/text macros/
!_TAG_KIND_DESCRIPTION!Verilog	e,event	/events/
!_TAG_KIND_DESCRIPTION!Verilog	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Verilog	i,instance	/instances of module/
!_TAG_KIND_DESCRIPTION!Verilog	m,module	/modules/
!_TAG_KIND_DESCRIPTION!Verilog	n,net	/net data types/
!_TAG_KIND_DESCRIPTION!Verilog	p,port	/ports/
!_TAG_KIND_DESCRIPTION!Verilog	r,register	/variable data types/
!_TAG_KIND_DESCRIPTION!Verilog	t,task	/tasks/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!SystemVerilog	1.1	/current.age/
!_TAG_PARSER_VERSION!Verilog	1.1	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/ishbhabp/FIFO_PROJECT/phase2/rtl/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/p6.1.20240922.0/
!_TAG_ROLE_DESCRIPTION!SystemVerilog!module	decl	/declaring instances/
!_TAG_ROLE_DESCRIPTION!Verilog!module	decl	/declaring instances/
BaseTest	classes/basetest.svh	/^class BaseTest extends Component;$/;"	C
ClearTest	classes/cleartest.svh	/^class ClearTest extends BaseTest;$/;"	C
Component	classes/component.svh	/^class Component;$/;"	C
Coverage	classes/coverage.svh	/^class Coverage extends Component;$/;"	C
DEPTH	fifo_pkg.sv	/^  parameter DEPTH = 8;$/;"	c	package:fifo_pkg
DEPTH	fifo_tb.v	/^module test#(parameter DEPTH = 8,parameter WIDTH = 32)($/;"	c	module:test
DEPTH	sync_fifo.v	/^module fifo #(parameter DEPTH = 8, parameter WIDTH=32)($/;"	c	module:fifo
DUT	top.sv	/^ fifo #(DEPTH,WIDTH) DUT (  \/\/Instantiating the DUT$/;"	i	module:top	typeref:module:fifo
Driver	classes/driver.svh	/^class Driver extends Component;$/;"	C
EmptyTest	classes/emptytest.svh	/^class EmptyTest extends BaseTest;$/;"	C
FullTest	classes/fulltest.svh	/^class FullTest extends BaseTest;$/;"	C
Monitor	classes/monitor.svh	/^class Monitor extends Component;$/;"	C
OneTest	classes/onetest.svh	/^class OneTest extends BaseTest;$/;"	C
Predictor	classes/predictor.svh	/^class Predictor extends Component;$/;"	C
Scoreboard	classes/scoreboard.svh	/^class Scoreboard extends Component;$/;"	C
Stimulus	classes/stimulus.svh	/^class Stimulus extends Component;$/;"	C
TransOne	classes/transone.svh	/^class TransOne extends Transaction;$/;"	C
TransZero	classes/transzero.svh	/^class TransZero extends Transaction;$/;"	C
Transaction	classes/transaction.svh	/^class Transaction extends Component;$/;"	C
WIDTH	fifo_pkg.sv	/^  parameter WIDTH = 32;$/;"	c	package:fifo_pkg
WIDTH	fifo_tb.v	/^module test#(parameter DEPTH = 8,parameter WIDTH = 32)($/;"	c	module:test
WIDTH	sync_fifo.v	/^module fifo #(parameter DEPTH = 8, parameter WIDTH=32)($/;"	c	module:fifo
ZeroTest	classes/zerotest.svh	/^class ZeroTest extends BaseTest;$/;"	C
almost_empty	fifo_inf.sv	/^  logic almost_empty;$/;"	r	interface:fifo_inf
almost_empty	fifo_tb.v	/^  input almost_empty,$/;"	p	module:test
almost_empty	sync_fifo.v	/^  output almost_empty,$/;"	p	module:fifo
almost_full	fifo_inf.sv	/^  logic almost_full;$/;"	r	interface:fifo_inf
almost_full	fifo_tb.v	/^  input almost_full,$/;"	p	module:test
almost_full	sync_fifo.v	/^  output almost_full,$/;"	p	module:fifo
basic_test	basic_test.v	/^task basic_test;$/;"	t
basic_test	fifo_tb.v	/^  task basic_test(input integer n);$/;"	t	module:test
blueprint_h	classes/stimulus.svh	/^  Transaction blueprint_h;$/;"	r	class:Stimulus
build	classes/basetest.svh	/^  virtual task build;$/;"	t	class:BaseTest
build	classes/component.svh	/^  virtual task build;$/;"	t	class:Component
build	classes/stimulus.svh	/^  virtual task build;$/;"	t	class:Stimulus
c_allone	classes/transone.svh	/^  constraint c_allone {data == '1;}$/;"	O	class:TransOne
c_allone	classes/transzero.svh	/^  constraint c_allone {data == 0;}$/;"	O	class:TransZero
check	classes/basetest.svh	/^  virtual task check(int n);$/;"	t	class:BaseTest
check	classes/component.svh	/^  virtual task check(int n);$/;"	t	class:Component
check	classes/driver.svh	/^  virtual task check(int n);$/;"	t	class:Driver
check	classes/emptytest.svh	/^  virtual task check(int n);$/;"	t	class:EmptyTest
check	classes/monitor.svh	/^  virtual task check(int n);$/;"	t	class:Monitor
check	classes/predictor.svh	/^  virtual task check(int n);$/;"	t	class:Predictor
check	classes/scoreboard.svh	/^  virtual task check(int n);$/;"	t	class:Scoreboard
check	classes/stimulus.svh	/^  virtual task check(int n);$/;"	t	class:Stimulus
check_output	classes/scoreboard.svh	/^  virtual task check_output(Transaction expected_h,output_h);$/;"	t	class:Scoreboard
check_transaction	classes/driver.svh	/^  virtual task check_transaction(Transaction trans_h);$/;"	t	class:Driver
clear	classes/driver.svh	/^  virtual task clear();$/;"	t	class:Driver
clear	fifo_inf.sv	/^  logic clear;$/;"	r	interface:fifo_inf
clear	fifo_tb.v	/^  output reg clear,$/;"	p	module:test
clear	sync_fifo.v	/^  input clear,$/;"	p	module:fifo
clear_fifo	fifo_tb.v	/^  task clear_fifo;$/;"	t	module:test
clear_test	fifo_tb.v	/^  task clear_test(input integer n);$/;"	t	module:test
clk	fifo_inf.sv	/^interface fifo_inf(input clk);$/;"	p	interface:fifo_inf
clk	fifo_tb.v	/^  input clk,$/;"	p	module:test
clk	sync_fifo.v	/^  input clk,$/;"	p	module:fifo
clk	top.sv	/^  logic clk;$/;"	r	module:top
clone	classes/transaction.svh	/^  virtual function Transaction clone();$/;"	f	class:Transaction
clone	classes/transone.svh	/^  virtual function Transaction clone();$/;"	f	class:TransOne
clone	classes/transzero.svh	/^  virtual function Transaction clone();$/;"	f	class:TransZero
cnt	fifo_inf.sv	/^  counter_t cnt;$/;"	r	interface:fifo_inf
cnt	fifo_tb.v	/^  input [$clog2(DEPTH):0] cnt,$/;"	p	module:test
cnt	sync_fifo.v	/^  output reg [$clog2(DEPTH):0] cnt,$/;"	p	module:fifo
copy	classes/transaction.svh	/^  virtual function void copy(Transaction rhs);$/;"	f	class:Transaction
counter_t	fifo_pkg.sv	/^  typedef logic [$clog2(DEPTH):0] counter_t;$/;"	T	package:fifo_pkg
data	classes/transaction.svh	/^  rand data_t data;$/;"	r	class:Transaction
data_in	fifo_inf.sv	/^  data_t data_in;$/;"	r	interface:fifo_inf
data_in	fifo_tb.v	/^  output reg [WIDTH-1:0] data_in,$/;"	p	module:test
data_in	sync_fifo.v	/^  input [WIDTH-1:0] data_in,$/;"	p	module:fifo
data_out	fifo_inf.sv	/^  data_t data_out;$/;"	r	interface:fifo_inf
data_out	fifo_tb.v	/^  input [WIDTH-1:0] data_out$/;"	p	module:test
data_out	sync_fifo.v	/^  output reg [WIDTH-1:0] data_out);$/;"	p	module:fifo
data_t	fifo_pkg.sv	/^  typedef logic [WIDTH-1:0] data_t;$/;"	T	package:fifo_pkg
drv_h	classes/basetest.svh	/^  Driver drv_h;$/;"	r	class:BaseTest
empty	fifo_inf.sv	/^  logic empty;$/;"	r	interface:fifo_inf
empty	fifo_tb.v	/^  input empty,$/;"	p	module:test
empty	sync_fifo.v	/^  output empty,$/;"	p	module:fifo
empty_test	fifo_tb.v	/^  task empty_test;$/;"	t	module:test
execute	fifo_tst_pkg.sv	/^  task execute(BaseTest test_h);$/;"	t	package:fifo_tst_pkg
expected_a	classes/predictor.svh	/^  Transaction expected_a[int];$/;"	r	class:Predictor
expected_h	classes/scoreboard.svh	/^      Transaction expected_h,output_h;$/;"	r	task:Scoreboard.check
expected_h	classes/scoreboard.svh	/^  virtual task check_output(Transaction expected_h,output_h);$/;"	p	task:Scoreboard.check_output
fifo	sync_fifo.v	/^module fifo #(parameter DEPTH = 8, parameter WIDTH=32)($/;"	m
fifo_inf	fifo_inf.sv	/^interface fifo_inf(input clk);$/;"	I
fifo_pkg	fifo_pkg.sv	/^package fifo_pkg;$/;"	K
fifo_tst_pkg	fifo_tst_pkg.sv	/^package fifo_tst_pkg;$/;"	K
full	fifo_inf.sv	/^  logic full;$/;"	r	interface:fifo_inf
full	fifo_tb.v	/^  input full,$/;"	p	module:test
full	sync_fifo.v	/^  output full,$/;"	p	module:fifo
full_test	fifo_tb.v	/^  task full_test;$/;"	t	module:test
i	fifo_tb.v	/^  integer i; \/\/loop variable$/;"	r	module:test
i	sync_fifo.v	/^  reg [$clog2(DEPTH):0] i; \/\/loop variable $/;"	r	module:fifo
index	classes/transaction.svh	/^  logic [$clog2(DEPTH)-1:0] index;$/;"	r	class:Transaction
index_t	fifo_pkg.sv	/^  typedef logic [$clog2(DEPTH)-1:0] index_t;$/;"	T	package:fifo_pkg
inf	top.sv	/^  fifo_inf inf(.clk(clk));$/;"	i	module:top	typeref:module:fifo_inf
mem_ref	fifo_tb.v	/^  reg [WIDTH-1:0] mem_ref [0:DEPTH-1]; \/\/TB memory for comparing values$/;"	r	module:test
memory	sync_fifo.v	/^  reg [WIDTH-1:0] memory [0:DEPTH-1]; \/\/memory declaration. $/;"	r	module:fifo
mon_h	classes/basetest.svh	/^  Monitor mon_h;$/;"	r	class:BaseTest
mon_in_h	classes/basetest.svh	/^  mailbox #(Transaction) stim2drv_h,mon_in_h,pred2scbd_h,mon_out_h;$/;"	r	class:BaseTest
mon_in_h	classes/monitor.svh	/^  mailbox #(Transaction) mon_in_h,mon_out_h;$/;"	r	class:Monitor
mon_in_h	classes/predictor.svh	/^  mailbox #(Transaction) mon_in_h,pred2scbd_h;$/;"	r	class:Predictor
mon_out_h	classes/basetest.svh	/^  mailbox #(Transaction) stim2drv_h,mon_in_h,pred2scbd_h,mon_out_h;$/;"	r	class:BaseTest
mon_out_h	classes/monitor.svh	/^  mailbox #(Transaction) mon_in_h,mon_out_h;$/;"	r	class:Monitor
mon_out_h	classes/scoreboard.svh	/^  mailbox #(Transaction) pred2scbd_h,mon_out_h;$/;"	r	class:Scoreboard
n	classes/basetest.svh	/^  virtual task check(int n);$/;"	p	task:BaseTest.check
n	classes/basetest.svh	/^  virtual task run(int n);$/;"	p	task:BaseTest.run
n	classes/cleartest.svh	/^  virtual task run(int n);$/;"	p	task:ClearTest.run
n	classes/component.svh	/^  virtual task check(int n);$/;"	p	task:Component.check
n	classes/component.svh	/^  virtual task run(int n);$/;"	p	task:Component.run
n	classes/driver.svh	/^  virtual task check(int n);$/;"	p	task:Driver.check
n	classes/driver.svh	/^  virtual task run(int n);$/;"	p	task:Driver.run
n	classes/emptytest.svh	/^  virtual task check(int n);$/;"	p	task:EmptyTest.check
n	classes/emptytest.svh	/^  virtual task run(int n);$/;"	p	task:EmptyTest.run
n	classes/fulltest.svh	/^  virtual task run(int n);$/;"	p	task:FullTest.run
n	classes/monitor.svh	/^  virtual task check(int n);$/;"	p	task:Monitor.check
n	classes/monitor.svh	/^  virtual task run(int n);$/;"	p	task:Monitor.run
n	classes/onetest.svh	/^  virtual task run(int n);$/;"	p	task:OneTest.run
n	classes/predictor.svh	/^  virtual task check(int n);$/;"	p	task:Predictor.check
n	classes/predictor.svh	/^  virtual task run(int n);$/;"	p	task:Predictor.run
n	classes/scoreboard.svh	/^  virtual task check(int n);$/;"	p	task:Scoreboard.check
n	classes/stimulus.svh	/^  virtual task check(int n);$/;"	p	task:Stimulus.check
n	classes/stimulus.svh	/^  virtual task run(int n);$/;"	p	task:Stimulus.run
n	classes/zerotest.svh	/^  virtual task run(int n);$/;"	p	task:ZeroTest.run
n	fifo_tb.v	/^  task basic_test(input integer n);$/;"	p	task:test.basic_test
n	fifo_tb.v	/^  task clear_test(input integer n);$/;"	p	task:test.clear_test
n	fifo_tb.v	/^  task read_data(input integer n);$/;"	p	task:test.read_data
n	fifo_tb.v	/^  task write_data(input integer n);$/;"	p	task:test.write_data
new	classes/basetest.svh	/^  function new(virtual fifo_inf vif);$/;"	f	class:BaseTest
new	classes/cleartest.svh	/^  function new(virtual fifo_inf vif);$/;"	f	class:ClearTest
new	classes/driver.svh	/^  function new(virtual fifo_inf vif);$/;"	f	class:Driver
new	classes/emptytest.svh	/^  function new(virtual fifo_inf vif);$/;"	f	class:EmptyTest
new	classes/fulltest.svh	/^  function new(virtual fifo_inf vif);$/;"	f	class:FullTest
new	classes/monitor.svh	/^  function new(virtual fifo_inf vif);$/;"	f	class:Monitor
new	classes/onetest.svh	/^  function new(virtual fifo_inf vif);$/;"	f	class:OneTest
new	classes/zerotest.svh	/^  function new(virtual fifo_inf vif);$/;"	f	class:ZeroTest
output_h	classes/scoreboard.svh	/^      Transaction expected_h,output_h;$/;"	r	task:Scoreboard.check
output_h	classes/scoreboard.svh	/^  virtual task check_output(Transaction expected_h,output_h);$/;"	p	task:Scoreboard.check_output
pred2scbd_h	classes/basetest.svh	/^  mailbox #(Transaction) stim2drv_h,mon_in_h,pred2scbd_h,mon_out_h;$/;"	r	class:BaseTest
pred2scbd_h	classes/predictor.svh	/^  mailbox #(Transaction) mon_in_h,pred2scbd_h;$/;"	r	class:Predictor
pred2scbd_h	classes/scoreboard.svh	/^  mailbox #(Transaction) pred2scbd_h,mon_out_h;$/;"	r	class:Scoreboard
pred_h	classes/basetest.svh	/^  Predictor pred_h;$/;"	r	class:BaseTest
print_transaction	classes/transaction.svh	/^  virtual function void print_transaction;$/;"	f	class:Transaction
print_transaction	classes/transone.svh	/^  function void print_transaction;$/;"	f	class:TransOne
print_transaction	classes/transzero.svh	/^  virtual function void print_transaction;$/;"	f	class:TransZero
read	fifo_inf.sv	/^  logic read;$/;"	r	interface:fifo_inf
read	fifo_tb.v	/^  output reg read,$/;"	p	module:test
read	sync_fifo.v	/^  input read,$/;"	p	module:fifo
read_data	fifo_tb.v	/^  task read_data(input integer n);$/;"	t	module:test
read_pointer	sync_fifo.v	/^  reg [$clog2(DEPTH)-1:0] read_pointer ; \/\/read_pointer for reading from the memory.$/;"	r	module:fifo
report	classes/basetest.svh	/^  virtual task report();$/;"	t	class:BaseTest
report	classes/component.svh	/^  virtual task report();$/;"	t	class:Component
reset	classes/basetest.svh	/^  virtual task reset;$/;"	t	class:BaseTest
reset	classes/component.svh	/^  virtual task reset;$/;"	t	class:Component
reset	classes/driver.svh	/^  virtual task reset();$/;"	t	class:Driver
reset	fifo_inf.sv	/^  logic reset;$/;"	r	interface:fifo_inf
reset	fifo_tb.v	/^  output reg reset,$/;"	p	module:test
reset	sync_fifo.v	/^  input reset,$/;"	p	module:fifo
rhs	classes/transaction.svh	/^  virtual function void copy(Transaction rhs);$/;"	p	function:Transaction.copy
rp	fifo_tb.v	/^  reg [$clog2(DEPTH)-1:0] rp;$/;"	r	module:test
run	classes/basetest.svh	/^  virtual task run(int n);$/;"	t	class:BaseTest
run	classes/cleartest.svh	/^  virtual task run(int n);$/;"	t	class:ClearTest
run	classes/component.svh	/^  virtual task run(int n);$/;"	t	class:Component
run	classes/driver.svh	/^  virtual task run(int n);$/;"	t	class:Driver
run	classes/emptytest.svh	/^  virtual task run(int n);$/;"	t	class:EmptyTest
run	classes/fulltest.svh	/^  virtual task run(int n);$/;"	t	class:FullTest
run	classes/monitor.svh	/^  virtual task run(int n);$/;"	t	class:Monitor
run	classes/onetest.svh	/^  virtual task run(int n);$/;"	t	class:OneTest
run	classes/predictor.svh	/^  virtual task run(int n);$/;"	t	class:Predictor
run	classes/stimulus.svh	/^  virtual task run(int n);$/;"	t	class:Stimulus
run	classes/zerotest.svh	/^  virtual task run(int n);$/;"	t	class:ZeroTest
run_test	fifo_tst_pkg.sv	/^  task run_test(virtual fifo_inf vif);$/;"	t	package:fifo_tst_pkg
scbd_h	classes/basetest.svh	/^  Scoreboard scbd_h;$/;"	r	class:BaseTest
scbd_h	classes/monitor.svh	/^  Scoreboard scbd_h;$/;"	r	class:Monitor
send_transaction	classes/driver.svh	/^  virtual task send_transaction(Transaction trans_h);$/;"	t	class:Driver
stim2drv_h	classes/basetest.svh	/^  mailbox #(Transaction) stim2drv_h,mon_in_h,pred2scbd_h,mon_out_h;$/;"	r	class:BaseTest
stim2drv_h	classes/driver.svh	/^  mailbox #(Transaction) stim2drv_h;$/;"	r	class:Driver
stim2drv_h	classes/stimulus.svh	/^  mailbox #(Transaction) stim2drv_h;$/;"	r	class:Stimulus
stim_h	classes/basetest.svh	/^  Stimulus stim_h;$/;"	r	class:BaseTest
test	fifo_tb.v	/^module test#(parameter DEPTH = 8,parameter WIDTH = 32)($/;"	m
test_case	fifo_tb.v	/^  reg [10*8:0] test_case;  \/\/test_case string$/;"	r	module:test
test_h	fifo_tst_pkg.sv	/^  BaseTest test_h;$/;"	r	package:fifo_tst_pkg
test_h	fifo_tst_pkg.sv	/^  task execute(BaseTest test_h);$/;"	p	task:fifo_tst_pkg.execute
test_name	fifo_tst_pkg.sv	/^    string test_name;$/;"	r	task:fifo_tst_pkg.run_test
top	top.sv	/^module top;$/;"	m
trans_h	classes/driver.svh	/^      Transaction trans_h;$/;"	r	task:Driver.check
trans_h	classes/driver.svh	/^      Transaction trans_h;$/;"	r	task:Driver.run
trans_h	classes/driver.svh	/^  virtual task check_transaction(Transaction trans_h);$/;"	p	task:Driver.check_transaction
trans_h	classes/driver.svh	/^  virtual task send_transaction(Transaction trans_h);$/;"	p	task:Driver.send_transaction
trans_h	classes/monitor.svh	/^    Transaction trans_h;$/;"	r	task:Monitor.check
trans_h	classes/monitor.svh	/^    Transaction trans_h;$/;"	r	task:Monitor.run
trans_h	classes/predictor.svh	/^      Transaction trans_h;$/;"	r	task:Predictor.check
trans_h	classes/predictor.svh	/^      Transaction trans_h;$/;"	r	task:Predictor.run
trans_h	classes/stimulus.svh	/^      Transaction trans_h;$/;"	r	task:Stimulus.check
trans_h	classes/stimulus.svh	/^      Transaction trans_h;$/;"	r	task:Stimulus.run
vif	classes/basetest.svh	/^  function new(virtual fifo_inf vif);$/;"	p	function:BaseTest.new
vif	classes/basetest.svh	/^  virtual fifo_inf vif;$/;"	r	class:BaseTest
vif	classes/cleartest.svh	/^  function new(virtual fifo_inf vif);$/;"	p	function:ClearTest.new
vif	classes/driver.svh	/^  function new(virtual fifo_inf vif);$/;"	p	function:Driver.new
vif	classes/driver.svh	/^  virtual fifo_inf vif;$/;"	r	class:Driver
vif	classes/emptytest.svh	/^  function new(virtual fifo_inf vif);$/;"	p	function:EmptyTest.new
vif	classes/fulltest.svh	/^  function new(virtual fifo_inf vif);$/;"	p	function:FullTest.new
vif	classes/monitor.svh	/^  function new(virtual fifo_inf vif);$/;"	p	function:Monitor.new
vif	classes/monitor.svh	/^  virtual fifo_inf vif;$/;"	r	class:Monitor
vif	classes/onetest.svh	/^  function new(virtual fifo_inf vif);$/;"	p	function:OneTest.new
vif	classes/zerotest.svh	/^  function new(virtual fifo_inf vif);$/;"	p	function:ZeroTest.new
vif	fifo_tst_pkg.sv	/^  task run_test(virtual fifo_inf vif);$/;"	p	task:fifo_tst_pkg.run_test
wp	fifo_tb.v	/^  reg [$clog2(DEPTH)-1:0] wp;$/;"	r	module:test
write	fifo_inf.sv	/^  logic write;$/;"	r	interface:fifo_inf
write	fifo_tb.v	/^  output reg write,$/;"	p	module:test
write	sync_fifo.v	/^  input write,$/;"	p	module:fifo
write_data	fifo_tb.v	/^  task write_data(input integer n);$/;"	t	module:test
write_pointer	sync_fifo.v	/^  reg [$clog2(DEPTH)-1:0] write_pointer ; \/\/write_pointer for writing into the memory.$/;"	r	module:fifo
