var g_data = {"name":"../rtl/fifo_tst_pkg.sv","src":"package fifo_tst_pkg;\n\n  import fifo_pkg::*;\n  export fifo_pkg::*;\n\n  typedef class Transaction;\n  typedef class TransOne;\n  typedef class TransZero;\n  typedef class Component;\n  typedef class Driver;\n  typedef class Stimulus;\n  typedef class Monitor;\n  typedef class Scoreboard;\n  typedef class Predictor;\n  typedef class Coverage;\n  typedef class BaseTest;\n  typedef class FullTest;\n  typedef class EmptyTest;\n  typedef class ClearTest;\n  typedef class OneTest;\n  typedef class InvalidTest;\n\n  `include \"classes/component.svh\"\n  `include \"classes/transaction.svh\"\n  `include \"classes/transone.svh\"\n  `include \"classes/transzero.svh\"\n  `include \"classes/driver.svh\"\n  `include \"classes/stimulus.svh\"\n  `include \"classes/monitor.svh\"\n  `include \"classes/scoreboard.svh\"\n  `include \"classes/predictor.svh\"\n  `include \"classes/coverage.svh\"\n  `include \"classes/basetest.svh\"\n  `include \"classes/fulltest.svh\"\n  `include \"classes/emptytest.svh\"\n  `include \"classes/cleartest.svh\"\n  `include \"classes/onetest.svh\"\n  `include \"classes/invalidtest.svh\"\n\n  BaseTest test_h;\n\n\n  task run_test(virtual fifo_inf vif);\n    \n    string test_name;\n if($value$plusargs(\"test=%s\",test_name))\n      $display(\"Found +test=%s\",test_name);\n    else\n      $fatal(0,\"MUST RUN WITH +test SWITCH ..\");\n    case(test_name)\n      \"BaseTest\": test_h = BaseTest::new(vif);\n      \"FullTest\": test_h = FullTest::new(vif);\n      \"EmptyTest\": test_h = EmptyTest::new(vif);\n      \"ClearTest\": test_h = ClearTest::new(vif);\n      \"OneTest\": test_h = OneTest::new(vif);\n      \"InvalidTest\": test_h = InvalidTest::new(vif);\n      \"All\": begin\n        $display(\"\\n\\t:::: Starting BaseTest...\\n\");\n        test_h = BaseTest::new(vif);\n        execute(test_h);\n        $display(\"\\n\\t:::: Starting FullTest...\\n\");\n        test_h = FullTest::new(vif);\n        execute(test_h);\n        $display(\"\\n\\t:::: Starting ClearTest...\\n\");\n        test_h = ClearTest::new(vif);\n        execute(test_h);\n        $display(\"\\n\\t:::: Starting EmptyTest...\\n\");\n        test_h = EmptyTest::new(vif);\n        execute(test_h);\n        $display(\"\\n\\t:::: Starting OneTest...\\n\");\n        test_h = OneTest::new(vif);\n        execute(test_h);\n        $display(\"\\n\\t :::: Starting InvalidTest...\\n\");\n        test_h = InvalidTest::new(vif);\n        execute(test_h);\n      end\n      default: $display(\"TestCase Not Found ...\");\n    endcase\n    if(test_name != \"All\")\n      execute(test_h);\n    #100;\n    $stop;\n  endtask\n\n  task execute(BaseTest test_h);\n    test_h.build();\n    test_h.reset();\n    test_h.run(DEPTH);\n    test_h.check(DEPTH);\n    test_h.report();\n  endtask\nendpackage\n","lang":"verilog"};
processSrcData(g_data);